# es
elasticsearch_hosts_array: "{{groups['elasticsearch']|d([])}}"
ip_aaaa: "{{(inventory_hostname)|d(.)}}"

#sslkey
sslkey_ip3: "{{groups['all']|d([])}}"
sslkey_ip2: "{{sslkey_ip3|join(',')}}"

# mongodb
mongo_hosts_array: "{{groups['mongodb']}}"
mongo_nodes: "{{mongo_hosts_array | map('regex_replace', '^(.*)$', '\\1:'+mongo_port|string)|list}}"
mongo_hosts: "{{mongo_nodes|join(',')}}"
mongo_members: "{% for h in mongo_hosts_array %}{% if loop.index0>0 %}, {% endif %}{'_id':{{loop.index0}}, 'host':'{{h}}:{{mongo_port|string}}'}{% endfor %}"

#rabbitmq
rabbitmq_hosts_array: "{{groups['rabbitmq']}}"

#consul
consul_hosts_array: "{{groups['consul']|d([])}}"

#minio nodes
minio_nodes: "{% for i in groups['minio'] %}{% if loop.index0>0 %},{% endif %}minio-{{ hostvars[i].minio_num }}{% endfor%}"
minio_num1: "{% for i in groups['minio'] %}{% if loop.index0>0 %}...{% endif %}{{ hostvars[i].minio_num }}{% endfor%}"
minio_num2: "{{ minio_num }}"
minio_data: |
      {% for i in groups['minio'] %}
                -v {{work_dir}}/data-{{ hostvars[i].minio_num }}:/data-{{ hostvars[i].minio_num }} \
      {% endfor %}
minio_data1: "{{ minio_data.rstrip() }}"
minio_data_path1: |
      {% for i in groups['minio'] %}
       {{work_dir}}/data-{{ hostvars[i].minio_num }}
      {%- endfor %}
minio_data_path: "{{ minio_data_path1.rstrip() }}"

# nacos
nacos_hosts_array: "{{groups['nacos']|d([])}}"
nacos_cluster_servers: '{% for h in nacos_hosts_array %}{% if loop.index0>0 %} {% endif %}{{h}}:{{NACOS_APPLICATION_PORT}}{% endfor %}'

#
pkgsealos_images1: "{% for i in pkgsealos_images %} {{ i }}{% endfor %}"

hosts_lines: |
      {% for i in groups['k8s-all'] %}
      "{{ i }} {{ hostvars[i].hostname }}",
      {% endfor %}

etcd_hosts_lines: |
      {% for i in groups['etcd'] %}
      "{{ i }} {{ hostvars[i].hostname }}",
      {% endfor %}

#  {% if hostvars[host].registry = true %}
hosts_registry1: |-
  {% for host in groups['all'] %}
  {% if hostvars[host].registry|default(false) | bool %}
  {{ host }} {{ image_registryDomain }}
  {% endif %}
  {% endfor %}

hosts_registry: "{{ hosts_registry1 | replace('\n', '') }}"

k8shosts_list: |
      {% for i in groups['k8s-all'] %}
      "{{ i }}",
      {% endfor %}

labels_lines: |
      {% for host in groups['k8s-all'] %}
      {% if hostvars[host].labels is defined %}
      {% set list = hostvars[host].labels.split(',') %}
      {% for i in list %}
      "{{ hostvars[host].hostname }} {{ i }}",
      {% endfor %}
      {% endif %}
      {% endfor %}

ETCD_INITIAL_CLUSTER: |-
  {% for host in groups['etcd'] %}
  {% set hostname = hostvars[host].hostname %}
  {{ hostname }}=https://{{ host }}:2380{% if not loop.last %},{% endif %}
  {% endfor %}

k8snode_ip_list: |-
  {% for host in groups['k8s-node'] %}
  {{host}}
  {% endfor %}

k8smaster_ip_list: |-
  {% for host in groups['k8s-master']|difference([inventory_hostname]) %}
  {{host}}
  {% endfor %}

openssl1_domain: |
  {% for q in openssl_domain %}
  {{q}}
  {% endfor %}

traefik_ips: |
  {% for q in groups['k8s-all'] %}
  {% if groups['k8s-all'] | map('extract', hostvars, ['labels']) | select('defined') | select('search', 'traefik=true') %}
  {% if loop.first %}
  {{q}}
  {% endif %}
  {% endif %}
  {% endfor %}

traefik_ip: "{{ traefik_ips | replace('\n', '') }}"

rocketmq_namesrv1: "{{groups['rocketmq']|d([])}}"
rocketmq_namesrv: '{% for i in rocketmq_namesrv1 %}{% if "namesrv" in hostvars[i].rkrole %}{% if loop.index0>0 %};{% endif %}{{i}}:9876{% endif %}{% endfor %}'
#controllerDLegerPeers: '{% for i in rocketmq_namesrv1 %}{% if "namesrv" in hostvars[i].rkrole %}{% if loop.index0>0 %};{% endif %}n{{ loop.index - 1 }}-{{i}}:9877{% endif %}{% endfor %}'
controllerDLegerPeers: '{% for i in rocketmq_namesrv1 %}{% if "namesrv" in hostvars[i].rkrole %}{% if loop.index0>0 %};{% endif %}{{  hostvars[i].controllerDLegerSelfId }}-{{i}}:9877{% endif %}{% endfor %}'
controllerAddr: '{% for i in rocketmq_namesrv1 %}{% if "namesrv" in hostvars[i].rkrole %}{% if loop.index0>0 %};{% endif %}{{i}}:9877{% endif %}{% endfor %}'
namesrv_num: "{{ groups['rocketmq'] | map('extract', hostvars, ['rkrole']) | select('defined') | select('search', 'namesrv') | list | length }}"

#vm_storage_Count: "{{ groups['k8s-all'] | regex_search('vmmetrics=init')|length }}"
vm_storage_Count: "{{ groups['k8s-all'] | map('extract', hostvars, ['labels']) | select('defined') | select('search', 'vmmetrics=init') | list | length }}"
traefik_replicaCount: "{{ groups['k8s-all'] | map('extract', hostvars, ['labels']) | select('defined') | select('search', 'traefik=true') | list | length }}"
kafka_bootstrapServers1: "{% for i in range(kafka_replicaCount) %}{{kafka_clustername}}-{{ loop.index0 }}.{{kafka_clustername}}-headless.{{ops_ns}}.svc:9092,{% endfor %}"
kafka_bootstrapServers: "{{kafka_bootstrapServers1.rstrip(',')}}"
filebeat_output_kafka1: "{% for i in range(kafka_replicaCount) %}'{{kafka_clustername}}-{{ loop.index0 }}.{{kafka_clustername}}-headless.{{ops_ns}}.svc:9092',{% endfor %}"
filebeat_output_kafka: "{{filebeat_output_kafka1.rstrip(',')}}"
output_es1: '{% for i in range(elastic_master_replicas) %}"{{elastic_clustername}}-master-{{ loop.index0 }}.{{elastic_clustername}}-master-headless.{{ops_ns}}.svc:9200",{% endfor %}'
output_es: "{{output_es1.rstrip(',')}}"
